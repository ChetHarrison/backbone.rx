{"version":3,"sources":["src/backbone.rx.js"],"names":[],"mappings":"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","file":"src/backbone.rx.js","sourcesContent":["import _ from 'underscore';\nimport Backbone from 'backbone';\nimport RxJS from 'rx';\n\nvar previousRx = Backbone.Rx;\n\nvar Rx = Backbone.Rx = {};\n\nRx.VERSION = '<%= version %>';\n\n// This allows you to run multiple instances of Rx on the same\n// webapp. After loading the new version, call `noConflict()` to\n// get a reference to it. At the same time the old version will be\n// returned to Backbone.Rx.\nRx.noConflict = function() {\n\tBackbone.Rx = previousRx;\n\treturn this;\n};\n\n// Whether or not we're in DEBUG mode or not. DEBUG mode helps you\n// get around the issues of lack of warnings when events are mis-typed.\nRx.DEBUG = false;\n\n// Format debug text.\nRx._debugText = function( warning, eventName, channelName ) {\n\treturn warning + ( channelName ? ' on the ' + channelName + ' channel' : '' ) +\n\t': \"' + eventName + '\"';\n};\n\n// This is the method that's called when an unregistered event was called.\n// By default, it logs warning to the console. By overriding this you could\n// make it throw an Error, for instance. This would make firing a nonexistent event\n// have the same consequence as firing a nonexistent method on an Object.\nRx.debugLog = function( warning, eventName, channelName ) {\n\tif ( Rx.DEBUG && console && console.warn ) {\n\t\tconsole.warn( Rx._debugText( warning, eventName, channelName ) );\n\t}\n};\n\nvar eventSplitter = /\\s+/;\n\n// An internal method used to handle Rx's method overloading for Requests.\n// It's borrowed from Backbone.Events. It differs from Backbone's overload\n// API (which is used in Backbone.Events) in that it doesn't support space-separated\n// event names.\nRx._eventsApi = function( obj, action, name, rest ) {\n\tif ( !name ) {\n\t\treturn false;\n\t}\n\n\tvar results = {};\n\n\t// Handle event maps.\n\tif ( typeof name === 'object' ) {\n\t\tfor ( var key in name ) {\n\t\t\tvar result = obj[ action ].apply( obj, [ key, name[ key ] ].concat( rest ) );\n\t\t\teventSplitter.test( key ) ? _.extend( results, result ) : results[ key ] = result;\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Handle space separated event names.\n\tif ( eventSplitter.test( name ) ) {\n\t\tvar names = name.split( eventSplitter );\n\t\tfor ( var i = 0, l = names.length; i < l; i++ ) {\n\t\t\tresults[ names[ i ] ] = obj[ action ].apply( obj, [ names[ i ] ].concat( rest ) );\n\t\t}\n\t\treturn results;\n\t}\n\n\treturn false;\n};\n\n// An optimized way to execute callbacks.\nRx._callHandler = function( callback, context, args ) {\n\tvar a1 = args[ 0 ],\n\ta2 = args[ 1 ],\n\ta3 = args[ 2 ];\n\tswitch ( args.length ) {\n\t\tcase 0:\n\t\t\treturn callback.call( context );\n\t\tcase 1:\n\t\t\treturn callback.call( context, a1 );\n\t\tcase 2:\n\t\t\treturn callback.call( context, a1, a2 );\n\t\tcase 3:\n\t\t\treturn callback.call( context, a1, a2, a3 );\n\t\tdefault:\n\t\t\treturn callback.apply( context, args );\n\t}\n};\n\n// A helper used by `off` methods to the handler from the store\nfunction removeHandler( store, name, callback, context ) {\n\tvar event = store[ name ];\n\tif (\n\t( !callback || ( callback === event.callback || callback === event.callback._callback ) ) &&\n\t( !context || ( context === event.context ) )\n\t) {\n\t\tdelete store[ name ];\n\t\treturn true;\n\t}\n}\n\nfunction removeHandlers( store, name, callback, context ) {\n\tstore || ( store = {} );\n\tvar names = name ? [ name ] : _.keys( store );\n\tvar matched = false;\n\n\tfor ( var i = 0, length = names.length; i < length; i++ ) {\n\t\tname = names[ i ];\n\n\t\t// If there's no event by this name, log it and continue\n\t\t// with the loop\n\t\tif ( !store[ name ] ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( removeHandler( store, name, callback, context ) ) {\n\t\t\tmatched = true;\n\t\t}\n\t}\n\n\treturn matched;\n}\n\n/*\n * tune-in\n * -------\n * Get console logs of a channel's activity\n *\n */\n\nvar _logs = {};\n\n// This is to produce an identical function in both tuneIn and tuneOut,\n// so that Backbone.Events unregisters it.\nfunction _partial( channelName ) {\n\treturn _logs[ channelName ] || ( _logs[ channelName ] = _.partial( Rx.log, channelName ) );\n}\n\n_.extend( Rx, {\n\n\t// Log information about the channel and event\n\tlog: function( channelName, eventName ) {\n\t\tvar args = _.rest( arguments, 2 );\n\t\tconsole.log( '[' + channelName + '] \"' + eventName + '\"', args );\n\t},\n\n\t// Logs all events on this channel to the console. It sets an\n\t// internal value on the channel telling it we're listening,\n\t// then sets a listener on the Backbone.Events\n\ttuneIn: function( channelName ) {\n\t\tvar channel = Rx.channel( channelName );\n\t\tchannel._tunedIn = true;\n\t\tchannel.on( 'all', _partial( channelName ) );\n\t\treturn this;\n\t},\n\n\t// Stop logging all of the activities on this channel to the console\n\ttuneOut: function( channelName ) {\n\t\tvar channel = Rx.channel( channelName );\n\t\tchannel._tunedIn = false;\n\t\tchannel.off( 'all', _partial( channelName ) );\n\t\tdelete _logs[ channelName ];\n\t\treturn this;\n\t}\n} );\n\n/*\n * Backbone.Rx.Requests\n * -----------------------\n * A messaging system for requesting data.\n *\n */\n\nfunction makeCallback( callback ) {\n\treturn _.isFunction( callback ) ? callback : function() {\n\t\treturn callback;\n\t};\n}\n\nRx.Requests = {\n\n\t// Make a request\n\trequest: function( name ) {\n\t\tvar args = _.rest( arguments );\n\t\tvar results = Rx._eventsApi( this, 'request', name, args );\n\t\tif ( results ) {\n\t\t\treturn results;\n\t\t}\n\t\tvar channelName = this.channelName;\n\t\tvar requests = this._requests;\n\n\t\t// Check if we should log the request, and if so, do it\n\t\tif ( channelName && this._tunedIn ) {\n\t\t\tRx.log.apply( this, [ channelName, name ].concat( args ) );\n\t\t}\n\n\t\t// If the request isn't handled, log it in DEBUG mode and exit\n\t\tif ( requests && ( requests[ name ] || requests[ 'default' ] ) ) {\n\t\t\tvar handler = requests[ name ] || requests[ 'default' ];\n\t\t\targs = requests[ name ] ? args : arguments;\n\t\t\treturn Rx._callHandler( handler.callback, handler.context, args );\n\t\t} else {\n\t\t\tRx.debugLog( 'An unhandled request was fired', name, channelName );\n\t\t}\n\t},\n\n\t// Set up a handler for a request\n\treply: function( name, callback, context ) {\n\t\tif ( Rx._eventsApi( this, 'reply', name, [ callback, context ] ) ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._requests || ( this._requests = {} );\n\n\t\tif ( this._requests[ name ] ) {\n\t\t\tRx.debugLog( 'A request was overwritten', name, this.channelName );\n\t\t}\n\n\t\tthis._requests[ name ] = {\n\t\t\tcallback: makeCallback( callback ),\n\t\t\tcontext: context || this\n\t\t};\n\n\t\treturn this;\n\t},\n\n\t// Set up a handler that can only be requested once\n\treplyOnce: function( name, callback, context ) {\n\t\tif ( Rx._eventsApi( this, 'replyOnce', name, [ callback, context ] ) ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar self = this;\n\n\t\tvar once = _.once( function() {\n\t\t\tself.stopReplying( name );\n\t\t\treturn makeCallback( callback ).apply( this, arguments );\n\t\t} );\n\n\t\treturn this.reply( name, once, context );\n\t},\n\n\t// Remove handler(s)\n\tstopReplying: function( name, callback, context ) {\n\t\tif ( Rx._eventsApi( this, 'stopReplying', name ) ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Remove everything if there are no arguments passed\n\t\tif ( !name && !callback && !context ) {\n\t\t\tdelete this._requests;\n\t\t} else if ( !removeHandlers( this._requests, name, callback, context ) ) {\n\t\t\tRx.debugLog( 'Attempted to remove the unregistered request', name, this.channelName );\n\t\t}\n\n\t\treturn this;\n\t}\n};\n\n/*\n * Backbone.Rx.channel\n * ----------------------\n * Get a reference to a channel by name.\n *\n */\n\nRx._channels = {};\n\nRx.channel = function( channelName ) {\n\tif ( !channelName ) {\n\t\tthrow new Error( 'You must provide a name for the channel.' );\n\t}\n\n\tif ( Rx._channels[ channelName ] ) {\n\t\treturn Rx._channels[ channelName ];\n\t} else {\n\t\treturn ( Rx._channels[ channelName ] = new Rx.Channel( channelName ) );\n\t}\n};\n\n/*\n * Backbone.Rx.Channel\n * ----------------------\n * A Channel is an object that extends from Backbone.Events,\n * and Rx.Requests.\n *\n */\n\nRx.Channel = function( channelName ) {\n\tthis.channelName = channelName;\n};\n\n_.extend( Rx.Channel.prototype, Backbone.Events, Rx.Requests, {\n\n\t// Remove all handlers from the messaging systems of this channel\n\treset: function() {\n\t\tthis.off();\n\t\tthis.stopListening();\n\t\tthis.stopReplying();\n\t\treturn this;\n\t}\n} );\n\n/*\n * Top-level API\n * -------------\n * Supplies the 'top-level API' for working with Channels directly\n * from Backbone.Rx.\n *\n */\n\nvar channel, args, systems = [ Backbone.Events, Rx.Commands, Rx.Requests ];\n\n_.each( systems, function( system ) {\n\t_.each( system, function( method, methodName ) {\n\t\tRx[ methodName ] = function( channelName ) {\n\t\t\targs = _.rest( arguments );\n\t\t\tchannel = this.channel( channelName );\n\t\t\treturn channel[ methodName ].apply( channel, args );\n\t\t};\n\t} );\n} );\n\nRx.reset = function( channelName ) {\n\tvar channels = !channelName ? this._channels : [ this._channels[ channelName ] ];\n\t_.invoke( channels, 'reset' );\n};\n\nexport default Rx;\n"]}